name: Production Workflow  

on:
  push:
    branches: [master]

jobs:

  deploy_prod:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_PROD_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_PROD_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    # Build and push Docker image
    
    # Deploy to Production Fargate service
    
    # Run smoke tests and get approval
    - name: Create GitHub Issue for Approval
      env:
        GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      run: |
        gh issue create \
          --title "Approve Production Deployment" \
          --body "Please review and approve the production deployment.

          To approve:
          - Comment '/approve' on this issue
          - The deployment will start after approval

          To deny:
          - Comment '/deny' on this issue
          - The deployment will be cancelled"

    - name: Wait for Approval
      env:
        GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      run: |
        # Esperar y verificar la aprobación
        echo "Waiting for issue approval..."
        
        # Bucle para verificar comentarios del issue
        while true; do
          # Obtener los comentarios del último issue
          COMMENTS=$(gh issue list --limit 1 | awk '{print $1}' | xargs -I {} gh issue view {} --comments)
          
          # Verificar si hay un comentario de aprobación
          if echo "$COMMENTS" | grep -qE "(/approve|LGTM|looks good)"; then
            echo "Deployment approved!"
            exit 0
          fi
          
          # Verificar si hay un comentario de denegación
          if echo "$COMMENTS" | grep -q "/deny"; then
            echo "Deployment denied!"
            exit 1
          fi
          
          # Esperar antes de la próxima verificación
          sleep 30
        done

  deploy:
    needs: wait-for-approval
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Production
      run: |
        echo "Deploying to production..."
        # Aquí añade tus pasos de despliegue